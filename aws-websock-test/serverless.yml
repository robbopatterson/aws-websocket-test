service: aws-websock-test
frameworkVersion: '2 || 3'
plugins:
  - serverless-stack-output

custom:
  tableName: 'web-socket-connections'
  output:
    file: ./dist/data.json
  
provider:
  name: aws
  runtime: nodejs14.x
  websocketsApiName: websockets-api
  websocketsApiRouteSelectionExpression: $request.body.action
  lambdaHashingVersion: '20201221'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ WebSocketTable, Arn ]

        - Effect: Allow
          Action: # Gives permission to DynamoDB tables
            - logs:*
            - dynamodb:*
            - states:*
            - events:*
          Resource:
            - "*"
            - "arn:aws:dynamodb:*:*:*"  
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: '*'

  OnConnectHandler:
    handler: websocket.onConnect
    events:
      - websocket:
          route: $connect

  OnDisconnect:
    handler: websocket.onDisconnect
    events:
      - websocket:
          route: $disconnect

resources:
  Resources:
    WebSocketTable:
      Type: AWS::DynamoDB::Table
      Properties:
          TableName: web-socket-connections
          AttributeDefinitions:
              - AttributeName: connectionId
                AttributeType: S
          KeySchema:
              - AttributeName: connectionId
                KeyType: HASH
          BillingMode: PAY_PER_REQUEST
